{"version":3,"sources":["webpack://next-core-sort/webpack/universalModuleDefinition","webpack://next-core-sort/webpack/bootstrap","webpack://next-core-sort/./src/index.js","webpack://next-core-sort/./src/sort.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sortObjects","mergeSort","quickSort","insertionSort","bubbleSort","array","descending","a","b","x","y","arr","middle","Math","left","right","_merge","result","indexLeft","indexRight","pivot","unsortedList","sortedList","len","tmp","j","sorted","swapped"],"mappings":"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","file":"next-core-sort.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"next-core-sort\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"next-core-sort\"] = factory();\n\telse\n\t\troot[\"next-core-sort\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { sortObjects, mergeSort, quickSort, insertionSort, bubbleSort } from \"./sort.js\";\n\nmodule.exports.sortObjects = sortObjects;\nmodule.exports.mergeSort = mergeSort;\nmodule.exports.quickSort = quickSort;\nmodule.exports.insertionSort = insertionSort;\nmodule.exports.bubbleSort = bubbleSort;\n","/**\n * Sorts an array of objects by property in object (not a deep property)\n * @function sortObjects\n * @param {array} array The object array to sort\n * @param {object} key The property to sort by\n * @param {boolean} descending Reverse the order\n * @returns {array} The sorted array\n */\nexport const sortObjects = (array, key, descending) => {\n  return array.sort( (a, b) => {\n    const x = a[key], y = b[key];\n    if (descending) {\n      return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n    }\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n};\n\n/**\n * Split the array into halves and merge them recursively\n * @function mergeSort\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const mergeSort = (arr) => {\n  if (arr.length === 1) {\n    // return once we hit an array with a single item\n    return arr;\n  }\n\n  const middle = Math.floor(arr.length / 2); // get the middle item of the array rounded down\n  const left = arr.slice(0, middle); // items on the left side\n  const right = arr.slice(middle); // items on the right side\n\n  return _merge(mergeSort(left), mergeSort(right));\n};\n\n/**\n * compare the arrays item by item and return the concatenated result\n * @private\n */\nconst _merge = (left, right) => {\n  let result = [];\n  let indexLeft = 0;\n  let indexRight = 0;\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (left[indexLeft] < right[indexRight]) {\n      result.push(left[indexLeft]);\n      indexLeft++;\n    } else {\n      result.push(right[indexRight]);\n      indexRight++;\n    }\n  }\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight));\n};\n\n/**\n * Quick Sort implementation for Arrays -\n * @function quickSort\n * @param {Array} arr Array to Sort\n * @returns {Array} Returns a sorted array\n */\nexport const quickSort = (arr) => {\n  //if array is empty\n  if (arr.length === 0) {\n    return [];\n  }\n\n  let i = 1;\n  const l = arr.length, left = [], right = [], pivot = arr[0];\n  //go through each element in array\n  for (i = 1; i < l; i++) {\n    if (arr[i] < pivot) {\n      left.push(arr[i]);\n    } else {\n      right.push(arr[i]);\n    }\n  }\n  return quickSort(left).concat(pivot, quickSort(right));\n};\n\n/**\n * Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.\n * It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.\n * @function insertionSort\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const insertionSort = (unsortedList) => {\n  let sortedList = [];\n  if (unsortedList) {\n    sortedList = unsortedList.slice();\n    const len = sortedList.length;\n    let i, j, tmp;\n  \tfor (i = 1; i < len; i++) {\n  \t\ttmp = sortedList[i]; //Copy of the current element.\n  \t\t/*Check through the sorted part and compare with the number in tmp. If large, shift the number*/\n  \t\tfor (j = i - 1; j >= 0 && (sortedList[j] > tmp); j--) {\n  \t\t\t//Shift the number\n  \t\t\tsortedList[j + 1] = sortedList[j];\n  \t\t}\n  \t\t//Insert the copied number at the correct position\n  \t\t//in sorted part.\n  \t\tsortedList[j + 1] = tmp;\n  \t}\n  }\n\treturn sortedList;\n};\n\n/**\n * Simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order.\n * @function bubbleSort\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const bubbleSort = (a) => {\n  let sorted = [];\n  if (a) {\n    sorted = a.slice();\n    let swapped, i, tmp;\n    const l = sorted.length - 1;\n    do {\n      swapped = false;\n      for (i = 0; i < l; i++) {\n        if (sorted[i] > sorted[i + 1]) {\n          tmp = sorted[i];\n          sorted[i] = sorted[i + 1];\n          sorted[i + 1] = tmp;\n          swapped = true;\n        }\n      }\n    } while (swapped);\n  }\n  return sorted;\n};\n"],"sourceRoot":""}