{"version":3,"sources":["webpack://next-core-sort/webpack/universalModuleDefinition","webpack://next-core-sort/webpack/bootstrap","webpack://next-core-sort/./src/index.js","webpack://next-core-sort/./src/sort.js"],"names":["module","sortObjects","mergeSort","quickSort","insertionSort","bubbleSort","x","a","y","b","arr","middle","Math","left","right","merge","result","indexLeft","indexRight","i","l","pivot","sortedList","unsortedList","len","tmp","j","sorted","swapped"],"mappings":"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","file":"next-core-sort.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"next-core-sort\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"next-core-sort\"] = factory();\n\telse\n\t\troot[\"next-core-sort\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { sortObjects, mergeSort, quickSort, insertionSort, bubbleSort } from \"./sort.js\";\n\nmodule.exports.sortObjects = sortObjects;\nmodule.exports.mergeSort = mergeSort;\nmodule.exports.quickSort = quickSort;\nmodule.exports.insertionSort = insertionSort;\nmodule.exports.bubbleSort = bubbleSort;\n","/**\n * Sorts an array of objects by propery in object\n * @function sortObjects\n * @memberof Utility\n * @param {array} array The object array to sort\n * @param {object} key The property to sort by\n * @returns {array} The sorted array\n */\nexport const sortObjects = (array, key) => {\n  return array.sort( (a, b) => {\n    const x = a[key], y = b[key];\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n};\n\n/**\n * Split the array into halves and merge them recursively\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const mergeSort = (arr) => {\n  if (arr.length === 1) {\n    // return once we hit an array with a single item\n    return arr;\n  }\n\n  const middle = Math.floor(arr.length / 2); // get the middle item of the array rounded down\n  const left = arr.slice(0, middle); // items on the left side\n  const right = arr.slice(middle); // items on the right side\n\n  return merge(mergeSort(left), mergeSort(right));\n};\n\n/*\n * compare the arrays item by item and return the concatenated result\n */\nconst merge = (left, right) => {\n  let result = [];\n  let indexLeft = 0;\n  let indexRight = 0;\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (left[indexLeft] < right[indexRight]) {\n      result.push(left[indexLeft]);\n      indexLeft++;\n    } else {\n      result.push(right[indexRight]);\n      indexRight++;\n    }\n  }\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight));\n};\n\n/**\n * Quick Sort implimentation for Arrays -\n * @function QuickSort\n * @memberof Utility\n * @param {Array} arr Array to Sort\n * @returns {Array} Returns a sorted array\n */\nexport const quickSort = (arr) => {\n  //if array is empty\n  if (arr.length === 0) {\n    return [];\n  }\n\n  let i = 1;\n  const l = arr.length, left = [], right = [], pivot = arr[0];\n  //go through each element in array\n  for (i = 1; i < l; i++) {\n    if (arr[i] < pivot) {\n      left.push(arr[i]);\n    } else {\n      right.push(arr[i]);\n    }\n  }\n  return quickSort(left).concat(pivot, quickSort(right));\n};\n\n/**\n * Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.\n * It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const insertionSort = (unsortedList) => {\n  let sortedList = [];\n  if (unsortedList) {\n    sortedList = unsortedList.slice();\n    const len = sortedList.length;\n    let i, j, tmp;\n  \tfor (i = 1; i < len; i++) {\n  \t\ttmp = sortedList[i]; //Copy of the current element.\n  \t\t/*Check through the sorted part and compare with the number in tmp. If large, shift the number*/\n  \t\tfor (j = i - 1; j >= 0 && (sortedList[j] > tmp); j--) {\n  \t\t\t//Shift the number\n  \t\t\tsortedList[j + 1] = sortedList[j];\n  \t\t}\n  \t\t//Insert the copied number at the correct position\n  \t\t//in sorted part.\n  \t\tsortedList[j + 1] = tmp;\n  \t}\n  }\n\treturn sortedList;\n};\n\n/**\n * Simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order.\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const bubbleSort = (a) => {\n  let sorted = [];\n  if (a) {\n    sorted = a.slice();\n    let swapped, i, tmp;\n    const l = sorted.length - 1;\n    do {\n      swapped = false;\n      for (i = 0; i < l; i++) {\n        if (sorted[i] > sorted[i + 1]) {\n          tmp = sorted[i];\n          sorted[i] = sorted[i + 1];\n          sorted[i + 1] = tmp;\n          swapped = true;\n        }\n      }\n    } while (swapped);\n  }\n  return sorted;\n};\n"],"sourceRoot":""}