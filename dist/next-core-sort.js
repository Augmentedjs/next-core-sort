!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("next-core-sort",[],e):"object"==typeof exports?exports["next-core-sort"]=e():t["next-core-sort"]=e()}(this,(function(){return function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/dist/",r(r.s=0)}([function(t,e,r){"use strict";var o=r(1);t.exports.sortObjects=o.sortObjects,t.exports.quicksortObjects=o.quicksortObjects,t.exports.mergeSort=o.mergeSort,t.exports.quickSort=o.quickSort,t.exports.insertionSort=o.insertionSort,t.exports.bubbleSort=o.bubbleSort},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.sortObjects=(t,e,r)=>t.sort((t,o)=>{const n=t[e],u=o[e];return r?n<u?1:n>u?-1:0:n<u?-1:n>u?1:0});const o=e.quicksortObjects=(t,e,r)=>{if(0===t.length)return[];if(!e)return t;let n=1;const u=t.length,c=[],s=[],i=t[0];for(n=1;n<u;n++){const o=t[n];r?o[e]>i[e]?c.push(o):s.push(o):o[e]<i[e]?c.push(o):s.push(o)}return o(c,e,r).concat(i,o(s,e,r))},n=e.mergeSort=t=>{if(1===t.length)return t;const e=Math.floor(t.length/2),r=t.slice(0,e),o=t.slice(e);return u(n(r),n(o))},u=(t,e)=>{let r=[],o=0,n=0;for(;o<t.length&&n<e.length;)t[o]<e[n]?(r.push(t[o]),o++):(r.push(e[n]),n++);return r.concat(t.slice(o)).concat(e.slice(n))},c=e.quickSort=t=>{if(0===t.length)return[];let e=1;const r=t.length,o=[],n=[],u=t[0];for(e=1;e<r;e++)t[e]<u?o.push(t[e]):n.push(t[e]);return c(o).concat(u,c(n))};e.insertionSort=t=>{let e=[];if(t){const r=(e=t.slice()).length;let o,n,u;for(o=1;o<r;o++){for(u=e[o],n=o-1;n>=0&&e[n]>u;n--)e[n+1]=e[n];e[n+1]=u}}return e},e.bubbleSort=t=>{let e=[];if(t){let r,o,n;const u=(e=t.slice()).length-1;do{for(r=!1,o=0;o<u;o++)e[o]>e[o+1]&&(n=e[o],e[o]=e[o+1],e[o+1]=n,r=!0)}while(r)}return e}}])}));
//# sourceMappingURL=next-core-sort.js.map